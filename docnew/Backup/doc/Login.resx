<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAQAAAAAAAAAAAAAAAEAAAAA
        AABjSkAASVFYAFpGSwAJAFMAAABeAEpVRQBJRVgAT1BAAE1JSAABAEsASztaAEFJUABHTUIAREhJAEZF
        QQA9RUwASkI7AE00PgAQB4YAVUdNAExOTgBOSlAAUkdKAE5EUAAhGMMAHxHLAEhDQABKOUIAHBCqAFZH
        SwBdST4AUEhPAEtMSgBPSUQASUpIADAyzAA3Oy8ARENNAEBQPwAqAEMAO0ROAE07QgA/Q0gAUkhOAFJN
        RABMTkgAT09BAEpHUABIRU4ARERUAEFIUQBHTEMASEpEAAAAQQBAIMUAPEhMAD40YgAdGqUADwBNAElL
        TABKSU0ATUpGAEhHSwBLQU4ARElHAEZFSQAqH6UATjVRAEAcrgBTQl0AS0tLAEVMTwBJSUkAREZOAEdH
        RwA8SkYAJiBbABsd4ABaM2sAUkdPAExNSQBKRlEA+Pv/AEFHUgBISUUASkVHAEJKSQBIQ0UABgPzAEZB
        QwBCPkkADwBYAFJJTAACCEsATE9GAE5JSAALAEAAS0tFAEhGTABFSkkARkRKAEJRPABhVk4AQUFPAEhD
        QgA2MVgAMhi/AC0upgBLSkwARTcrABsW0ABJSEoAREdPAEdGSAAKBucAUFROAE9LVwA+J10ARktOAExP
        QABIR1AASExGAEhGRgBMQ0AAOkZMADwewwA3QVMAWVVKAC0gyABYTUkAHRTgACQU0wBUSUUAR0ZWAExB
        UQAQDOcASkZFAAcFdgBASE8AQ0lIAB8WugBiTEYA/f7/AE9HUQBNSU8AWD5QAElGVQBKTkIARk1IAEBH
        VgBHQ0kAOUVPAFhGTQBSR1EAVUhKAExNSwBPTkQASUhSAEpLSQBISUcAR1A8AERNQwBGR0UAAADlAFRI
        RgBRTEMATklKAE5OQABJRk8AOSfSAElQOwBRRTkAQj1SAAAANwBJRDsAEQbfAAkB4QA+QzoAWkhJAEtK
        TgBLT0QAQU9OAEdMSgBISksASUhMAEpCTQBHRkoASkdDAERGRwAXAFwAYjlsAFFKUQD///8AAQBaADE1
        UgBPSE8ATExMAFZIQgBKSkoATUtDAEVHTwBISEgAPlFIAEZGRgBKPkoAJRbqAF9FPgBkWF4ANCZcAE8/
        VgBkR2gAS0ZIAEZOQwBHQ04AAABCAEJFSQAAAHsATUFlAFBHVABPSkkAS0lPAEtORQBGTUoAEwzpAERL
        SABHRUsAS0JFADxISgAbCMkAVEdVAFBHUQBcLGcAUExHAFRLQQBKTUsASklLAEtHTABIS0kAT0RGAEJD
        VwBIR0kASUVKAEVLRgBGSUcAQ0ZOABgVRwAWF6MAU0pHAE1LSwAXFd0AUUhFAEdKTwBPPFcAPEZYAElM
        PQA+QloAz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8/Pz8DPz8/Pz8/Pz8/Pz8/S0tLPz8/Pz8/P
        z8/Pz8/Pz8/PwM/Pz8/Pz8/Pz8/Pz9K9vTpgOs/Pz8/Pz8/Pz8/Pz8/Az8/Pz8/Pz8/Pz9JgRM2jh3Kv
        QtbP0tLPz8/Pz8/Pz8DPz8/Pz8/Pz8/SrUTk31hYWHKvIzXSz2bPz8/Pz8/PwM/Pz8/Pz89mz9I2g81y
        WFhYWN+wI9LPz8/Pz8/Pz8/Az8/Pz8/Pz8/SNs1yTVJSUlJSjG75a8/Pz8/Pz8/Pc8DPz8/Pz8/POmup
        sLD2UlKOjlLB9uQjOGBFdM/PdHQVwM/Pz8/ZvX3N36Mj9mtSUlJSUjU5I3JYWIlMae9cPbuOz8/P2QRq
        5M3fcvmpQlJSUlJSNWuAWFhY+YzBOB6qqo7Pz8/1HK/Nr81ujGvSUlJSUlKt0EQZTbCjgjm9bauqjmbP
        Zq1NWFiMUlJSUo6OwMCOwMBSUlJSiVjfqQmkq/6OZs/PrU1YWIxSUsDAUlJSUsDAwFJSUlLB37CpweUQ
        YY5zZs+95FhYjFJSjlJSUlKOwMCOUlJSUgnfsKm9Q1kijs/P0kSDcqMYUlJSUlJSwMBSUo6OUlJSBK/N
        NtbMWSqOAc/PvRzN33Juwa2trVKOwI7Ara2twcEEGYBCvcNzsY5Hpwe/db1E33KvIxJrUlJSUlKta2uw
        36/2iUwKu7Ghjt4Hqi38dTqAgxnkTTlSUlJSUq32OYMZgME42Reu1EtS1CzFKtp0rq1Ma4ewGFJSUlJS
        BGrka0ytwmmG+q5LS1LxzgCXfij+Q04ngqOwbtatNQTYg4D12hHMv4Gru/QoUhWNHnz9lRTSvuccTXKH
        I/Y5jBkYa8K5kZlZEOkOKlNSnyEhDfRJb4bR/EyJ+Vjfr83kqRJdAepoenqIu6K81440VFSf8PC6ZDBR
        WmnBQmp9NkS90Nkaru5Vy8vLy8vLwDRUVJ/J8Lpk4ajVrDhgCVsDOnUKRXuEE9NKSkpKSkrAVFRUn8nJ
        8D5i4eHTZm3FKRvP5T9XkJZBycnJycnJycBUn5+fycnw6zy4uOzi+n/bPSQlZ4sLD0vzycnJycnJwFSf
        n5/JyXFsbLOz3HQvsXPUBUcy4ze1ykDJycnJycnAnp6enp6exsbGxut47/+KJmVWoeAxYzMMIkhISEhI
        SMCenp6enp6enp6exrfIcPKgqmHHXxcWpIQISEhISEhIwCAgICAgICAgICAgIO15k3enpfeaHZgCsqbG
        xsbGxsbAm5ubm5ubm1BQUFBeLgecw4/o5h8sXE8r+EZGRkZGRsDEm5ubm5tQUFBQLV603Z2SBoX7tt6U
        3nY7RkZGRkZGwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>